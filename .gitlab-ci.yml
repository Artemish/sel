variables:
  DOCKER_REGISTRY: "docker.grammatech.com:14850"
  LOCAL_IMAGE_NAME: '$CI_BUILD_REF_NAME-$CI_PIPELINE_ID'

before_script:
  - docker info
  - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $DOCKER_REGISTRY

stages:
  - build-test-and-tag
  - dependents

build_image:
  stage: build
  script:
    - docker pull $DOCKER_REGISTRY/synthesis/cl:latest
    - make -C docker $CI_PROJECT_NAME

test_image:
  stage: test
  script:
    - docker run $LOCAL_IMAGE_NAME /bin/bash -c "cd sel && make check"

tag_image:
  stage: tag
  script:
    - docker tag $LOCAL_IMAGE_NAME $DOCKER_REGISTRY/$CI_PROJECT_PATH:$CI_BUILD_REF_NAME
    - docker push $DOCKER_REGISTRY/$CI_PROJECT_PATH:$CI_BUILD_REF_NAME

    # Cleanup local image.
    - docker rmi -f $LOCAL_IMAGE_NAME

trigger_bed:
  stage: dependents
  script:
    - "curl -X POST -F token=53072adf26824b62fe4bd75f81a816 -F ref=master https://git.grammatech.com/api/v4/projects/209/trigger/pipeline"
  only:
    - master

trigger_bug-injector:
  stage: dependents
  script:
    - "curl -X POST -F token=ff71369e488f933f0fb4c531e11d8f -F ref=master https://git.grammatech.com/api/v4/projects/57/trigger/pipeline"
  only:
    - master

trigger_evo-rings:
  stage: dependents
  script:
    - "curl -X POST -F token=3927540b9948e9eb8d3b1774dd9627 -F ref=master https://git.grammatech.com/api/v4/projects/80/trigger/pipeline"
  only:
    - master
