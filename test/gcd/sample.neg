/* 
 * Command line: opannotate -a coverage.neg 
 * 
 * Interpretation of command line:
 * Output annotated assembly listing with samples
 * 
 * CPU: Intel Architectural Perfmon, speed 1000 MHz (estimated)
 * Counted CPU_CLK_UNHALTED events (Clock cycles when not halted) with a unit mask of 0x00 (No unit mask) count 100000
 */
               :
               :/home/eschulte/research/epr/genprog-code/repair/gcd-test/coverage.neg:     file format elf64-x86-64
               :
               :
               :Disassembly of section .text:
               :
0000000000400544 <main>: /* main total: 27448224 100.000 */
               :  400544:	push   %rbp
               :  400545:	mov    %rsp,%rbp
               :  400548:	sub    $0x20,%rsp
               :  40054c:	mov    %edi,-0x14(%rbp)
               :  40054f:	mov    %rsi,-0x20(%rbp)
               :  400553:	mov    -0x20(%rbp),%rax
               :  400557:	add    $0x8,%rax
               :  40055b:	mov    (%rax),%rax
               :  40055e:	mov    %rax,%rdi
               :  400561:	mov    $0x0,%eax
               :  400566:	callq  400448 <atoi@plt>
               :  40056b:	cvtsi2sd %eax,%xmm0
               :  40056f:	movsd  %xmm0,-0x8(%rbp)
               :  400574:	mov    -0x20(%rbp),%rax
               :  400578:	add    $0x10,%rax
               :  40057c:	mov    (%rax),%rax
               :  40057f:	mov    %rax,%rdi
               :  400582:	mov    $0x0,%eax
               :  400587:	callq  400448 <atoi@plt>
               :  40058c:	cvtsi2sd %eax,%xmm0
               :  400590:	movsd  %xmm0,-0x10(%rbp)
               :  400595:	xorpd  %xmm0,%xmm0
               :  400599:	ucomisd -0x8(%rbp),%xmm0
               :  40059e:	jp     4005f2 <main+0xae>
               :  4005a0:	xorpd  %xmm0,%xmm0
               :  4005a4:	ucomisd -0x8(%rbp),%xmm0
               :  4005a9:	jne    4005f2 <main+0xae>
               :  4005ab:	movsd  -0x10(%rbp),%xmm0
               :  4005b0:	mov    $0x40071c,%edi
               :  4005b5:	mov    $0x1,%eax
               :  4005ba:	callq  400428 <printf@plt>
               :  4005bf:	jmp    4005f2 <main+0xae>
2199395  8.0129 :  4005c1:	movsd  -0x8(%rbp),%xmm0
   481  0.0018 :  4005c6:	ucomisd -0x10(%rbp),%xmm0
  2940  0.0107 :  4005cb:	seta   %al
1350805  4.9213 :  4005ce:	test   %al,%al
    17 6.2e-05 :  4005d0:	je     4005e3 <main+0x9f>
               :  4005d2:	movsd  -0x8(%rbp),%xmm0
               :  4005d7:	subsd  -0x10(%rbp),%xmm0
               :  4005dc:	movsd  %xmm0,-0x8(%rbp)
               :  4005e1:	jmp    4005f2 <main+0xae>
633934  2.3096 :  4005e3:	movsd  -0x10(%rbp),%xmm0
  1587  0.0058 :  4005e8:	subsd  -0x8(%rbp),%xmm0
  7953  0.0290 :  4005ed:	movsd  %xmm0,-0x10(%rbp)
  3342  0.0122 :  4005f2:	xorpd  %xmm0,%xmm0
1656451  6.0348 :  4005f6:	ucomisd -0x10(%rbp),%xmm0
16579116 60.4014 :  4005fb:	jp     4005c1 <main+0x7d>
5007326 18.2428 :  4005fd:	xorpd  %xmm0,%xmm0
   370  0.0013 :  400601:	ucomisd -0x10(%rbp),%xmm0
  4507  0.0164 :  400606:	jne    4005c1 <main+0x7d>
               :  400608:	movsd  -0x8(%rbp),%xmm0
               :  40060d:	mov    $0x40071c,%edi
               :  400612:	mov    $0x1,%eax
               :  400617:	callq  400428 <printf@plt>
               :  40061c:	mov    $0x0,%eax
               :  400621:	leaveq 
               :  400622:	retq   
               :  400623:	nop
               :  400624:	nop
               :  400625:	nop
               :  400626:	nop
               :  400627:	nop
               :  400628:	nop
               :  400629:	nop
               :  40062a:	nop
               :  40062b:	nop
               :  40062c:	nop
               :  40062d:	nop
               :  40062e:	nop
               :  40062f:	nop
               :
               :/home/eschulte/research/epr/genprog-code/repair/gcd-test/coverage.neg:     file format elf64-x86-64
               :
               :
               :Disassembly of section .text:
               :
0000000000400630 <__libc_csu_init>: /* __libc_csu_init total:      1 3.6e-06 */
               :  400630:	mov    %rbp,-0x28(%rsp)
               :  400635:	mov    %r12,-0x20(%rsp)
               :  40063a:	lea    0x2007e3(%rip),%rbp        # 600e24 <__init_array_end>
               :  400641:	lea    0x2007dc(%rip),%r12        # 600e24 <__init_array_end>
               :  400648:	mov    %r13,-0x18(%rsp)
               :  40064d:	mov    %r14,-0x10(%rsp)
               :  400652:	mov    %r15,-0x8(%rsp)
               :  400657:	mov    %rbx,-0x30(%rsp)
     1 3.6e-06 :  40065c:	sub    $0x38,%rsp
               :  400660:	sub    %r12,%rbp
               :  400663:	mov    %edi,%r13d
               :  400666:	mov    %rsi,%r14
               :  400669:	sar    $0x3,%rbp
               :  40066d:	mov    %rdx,%r15
               :  400670:	callq  400400 <_init>
               :  400675:	test   %rbp,%rbp
               :  400678:	je     400696 <__libc_csu_init+0x66>
               :  40067a:	xor    %ebx,%ebx
               :  40067c:	nopl   0x0(%rax)
               :  400680:	mov    %r15,%rdx
               :  400683:	mov    %r14,%rsi
               :  400686:	mov    %r13d,%edi
               :  400689:	callq  *(%r12,%rbx,8)
               :  40068d:	add    $0x1,%rbx
               :  400691:	cmp    %rbp,%rbx
               :  400694:	jb     400680 <__libc_csu_init+0x50>
               :  400696:	mov    0x8(%rsp),%rbx
               :  40069b:	mov    0x10(%rsp),%rbp
               :  4006a0:	mov    0x18(%rsp),%r12
               :  4006a5:	mov    0x20(%rsp),%r13
               :  4006aa:	mov    0x28(%rsp),%r14
               :  4006af:	mov    0x30(%rsp),%r15
               :  4006b4:	add    $0x38,%rsp
               :  4006b8:	retq   
               :  4006b9:	nopl   0x0(%rax)
